/*
 * Datadog API V1 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * API version: 1.0
 * Contact: support@datadoghq.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// FastlyService The Fastly service that is available for integration with Datadog.
type FastlyService struct {
	// Your Fastly service ID.
	ServiceId string `json:"service_id"`
	// A list of tags(key:value), seperated by commas, to assign to each Fastly metric.
	ServiceTags string `json:"service_tags"`
	// Your service account associated with this Fastly integration.
	ServiceAccount string `json:"service_account"`
}

// NewFastlyService instantiates a new FastlyService object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFastlyService(serviceId string, serviceTags string, serviceAccount string) *FastlyService {
	this := FastlyService{}
	this.ServiceId = serviceId
	this.ServiceTags = serviceTags
	this.ServiceAccount = serviceAccount
	return &this
}

// NewFastlyServiceWithDefaults instantiates a new FastlyService object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFastlyServiceWithDefaults() *FastlyService {
	this := FastlyService{}
	return &this
}

// GetServiceId returns the ServiceId field value
func (o *FastlyService) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *FastlyService) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *FastlyService) SetServiceId(v string) {
	o.ServiceId = v
}

// GetServiceTags returns the ServiceTags field value
func (o *FastlyService) GetServiceTags() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceTags
}

// GetServiceTagsOk returns a tuple with the ServiceTags field value
// and a boolean to check if the value has been set.
func (o *FastlyService) GetServiceTagsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceTags, true
}

// SetServiceTags sets field value
func (o *FastlyService) SetServiceTags(v string) {
	o.ServiceTags = v
}

// GetServiceAccount returns the ServiceAccount field value
func (o *FastlyService) GetServiceAccount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceAccount
}

// GetServiceAccountOk returns a tuple with the ServiceAccount field value
// and a boolean to check if the value has been set.
func (o *FastlyService) GetServiceAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceAccount, true
}

// SetServiceAccount sets field value
func (o *FastlyService) SetServiceAccount(v string) {
	o.ServiceAccount = v
}

func (o FastlyService) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["service_id"] = o.ServiceId
	}
	if true {
		toSerialize["service_tags"] = o.ServiceTags
	}
	if true {
		toSerialize["service_account"] = o.ServiceAccount
	}
	return json.Marshal(toSerialize)
}

type NullableFastlyService struct {
	value *FastlyService
	isSet bool
}

func (v NullableFastlyService) Get() *FastlyService {
	return v.value
}

func (v *NullableFastlyService) Set(val *FastlyService) {
	v.value = val
	v.isSet = true
}

func (v NullableFastlyService) IsSet() bool {
	return v.isSet
}

func (v *NullableFastlyService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFastlyService(val *FastlyService) *NullableFastlyService {
	return &NullableFastlyService{value: val, isSet: true}
}

func (v NullableFastlyService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFastlyService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
